# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    meeting_room_photos_directory: '%env(MEETING_ROOM_PHOTOS_DIRECTORY)%'

services:

    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.


    App\EventListener\OrganizationStatusListener:
        arguments:
            $em: '@doctrine.orm.entity_manager'
        tags:
            - { name: doctrine.event_listener, event: preUpdate, entity: App\Entity\Organization }

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Service\YandexCalendarService:
        arguments:
            $yandexUsername: '%env(YANDEX_USERNAME)%'
            $yandexPass: '%env(YANDEX_APP_PASSWORD)%'


    app.normalizer.object_normalizer:
        class: Symfony\Component\Serializer\Normalizer\ObjectNormalizer
        tags: ['serializer.normalizer']
        arguments:
            $defaultContext:
                circular_reference_handler: '@App\Serializer\CircularReferenceHandler'
                callbacks: {
                    'date' : '@App\Serializer\DateCallback',
                    'recurrenceEnd': '@App\Serializer\DateCallback',
                    'timeStart': '@App\Serializer\TimeCallback',
                    'timeEnd' : '@App\Serializer\TimeCallback',
                    'status': '@App\Serializer\StatusCallback'
                }

    App\EventListener\EventSynchronizationListener:
        tags:
            - { name: doctrine.event_listener, event: postPersist }
            - { name: doctrine.event_listener, event: postUpdate }
            - { name: doctrine.event_listener, event: preRemove }


    App\Service\NotificationService:
        arguments:
            $mailer: '@Symfony\Component\Mailer\MailerInterface'
            $vapidPublicKey: '%env(VAPID_PUBLIC_KEY)%'
            $vapidPrivateKey: '%env(VAPID_PRIVATE_KEY)%'



